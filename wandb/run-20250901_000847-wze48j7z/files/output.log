***** Running training *****
09/01/2025 00:08:48 - INFO - utils.data_utils -   ***** Running training *****
  Num examples = 11995
09/01/2025 00:08:48 - INFO - utils.data_utils -     Num examples = 11995
  Dataloader size = 3999
09/01/2025 00:08:48 - INFO - utils.data_utils -     Dataloader size = 3999
  Resume training from step 0
09/01/2025 00:08:48 - INFO - utils.data_utils -     Resume training from step 0
  Instantaneous batch size per device = 1
09/01/2025 00:08:48 - INFO - utils.data_utils -     Instantaneous batch size per device = 1
  Total train batch size (w. data & sequence parallel, accumulation) = 12.0
09/01/2025 00:08:48 - INFO - utils.data_utils -     Total train batch size (w. data & sequence parallel, accumulation) = 12.0
  Gradient Accumulation steps = 4
09/01/2025 00:08:48 - INFO - utils.data_utils -     Gradient Accumulation steps = 4
  Total optimization steps per epoch = 300
09/01/2025 00:08:48 - INFO - utils.data_utils -     Total optimization steps per epoch = 300
  Total training parameters per FSDP shard = 11.930383936 B
09/01/2025 00:08:48 - INFO - utils.data_utils -     Total training parameters per FSDP shard = 11.930383936 B
  Master weight dtype: torch.float16
09/01/2025 00:08:48 - INFO - utils.data_utils -     Master weight dtype: torch.float16
Sampling Progress: 100%|████████████████████████████████████████████████████████████████| 16/16 [00:24<00:00,  1.52s/it]
09/01/2025 00:09:13 - INFO - utils.data_utils -   --> decode image and save to log dir... 16/16 [00:24<00:00,  1.33s/it]
--> decode image and save to log dir...
Sampling Progress: 100%|████████████████████████████████████████████████████████████████| 16/16 [00:21<00:00,  1.32s/it]
09/01/2025 00:09:35 - INFO - utils.data_utils -   --> decode image and save to log dir... 16/16 [00:21<00:00,  1.31s/it]
--> decode image and save to log dir...
Sampling Progress: 100%|████████████████████████████████████████████████████████████████| 16/16 [00:21<00:00,  1.31s/it]
09/01/2025 00:09:56 - INFO - utils.data_utils -   --> decode image and save to log dir... 16/16 [00:21<00:00,  1.32s/it]
--> decode image and save to log dir...
Sampling Progress: 100%|████████████████████████████████████████████████████████████████| 16/16 [00:21<00:00,  1.31s/it]
09/01/2025 00:10:18 - INFO - utils.data_utils -   --> decode image and save to log dir... 16/16 [00:21<00:00,  1.31s/it]
--> decode image and save to log dir...
gathered_reward {'ctr_reward': [], 'ecp_reward': [], 't2i_reward': [], 'hps_reward': tensor([0.1510, 0.1510, 0.1510, 0.1510, 0.1025, 0.1025, 0.1025, 0.1025, 0.1066,
        0.1066, 0.1066, 0.1066], device='cuda:0')}
Traceback (most recent call last):
  File "/root/autodl-tmp/DiffusionGRPO/src/train_grpo_flux.py", line 1538, in <module>
    main(args)
  File "/root/autodl-tmp/DiffusionGRPO/src/train_grpo_flux.py", line 1184, in main
    loss, grad_norm = train_one_step(
  File "/root/autodl-tmp/DiffusionGRPO/src/train_grpo_flux.py", line 902, in train_one_step
    new_log_probs = grpo_one_step(
  File "/root/autodl-tmp/DiffusionGRPO/src/train_grpo_flux.py", line 485, in grpo_one_step
    pred = tranformer_forward(
  File "/root/autodl-tmp/DiffusionGRPO/src/flux/transformer_.py", line 209, in tranformer_forward
    result = block(
  File "/root/miniconda3/envs/aigc_rl/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/root/miniconda3/envs/aigc_rl/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/root/autodl-tmp/DiffusionGRPO/src/flux/block.py", line 301, in single_block_forward
    attn_output = attn_forward(
  File "/root/autodl-tmp/DiffusionGRPO/src/flux/block.py", line 39, in attn_forward
    query = attn.norm_q(query)
  File "/root/miniconda3/envs/aigc_rl/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/root/miniconda3/envs/aigc_rl/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/root/miniconda3/envs/aigc_rl/lib/python3.10/site-packages/diffusers/models/normalization.py", line 509, in forward
    variance = hidden_states.to(torch.float32).pow(2).mean(-1, keepdim=True)
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 38.00 MiB. GPU 0 has a total capacity of 95.07 GiB of which 25.56 MiB is free. Including non-PyTorch memory, this process has 95.04 GiB memory in use. Of the allocated memory 90.33 GiB is allocated by PyTorch, and 2.61 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
[rank0]: Traceback (most recent call last):
[rank0]:   File "/root/autodl-tmp/DiffusionGRPO/src/train_grpo_flux.py", line 1538, in <module>
[rank0]:     main(args)
[rank0]:   File "/root/autodl-tmp/DiffusionGRPO/src/train_grpo_flux.py", line 1184, in main
[rank0]:     loss, grad_norm = train_one_step(
[rank0]:   File "/root/autodl-tmp/DiffusionGRPO/src/train_grpo_flux.py", line 902, in train_one_step
[rank0]:     new_log_probs = grpo_one_step(
[rank0]:   File "/root/autodl-tmp/DiffusionGRPO/src/train_grpo_flux.py", line 485, in grpo_one_step
[rank0]:     pred = tranformer_forward(
[rank0]:   File "/root/autodl-tmp/DiffusionGRPO/src/flux/transformer_.py", line 209, in tranformer_forward
[rank0]:     result = block(
[rank0]:   File "/root/miniconda3/envs/aigc_rl/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
[rank0]:     return self._call_impl(*args, **kwargs)
[rank0]:   File "/root/miniconda3/envs/aigc_rl/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
[rank0]:     return forward_call(*args, **kwargs)
[rank0]:   File "/root/autodl-tmp/DiffusionGRPO/src/flux/block.py", line 301, in single_block_forward
[rank0]:     attn_output = attn_forward(
[rank0]:   File "/root/autodl-tmp/DiffusionGRPO/src/flux/block.py", line 39, in attn_forward
[rank0]:     query = attn.norm_q(query)
[rank0]:   File "/root/miniconda3/envs/aigc_rl/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
[rank0]:     return self._call_impl(*args, **kwargs)
[rank0]:   File "/root/miniconda3/envs/aigc_rl/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
[rank0]:     return forward_call(*args, **kwargs)
[rank0]:   File "/root/miniconda3/envs/aigc_rl/lib/python3.10/site-packages/diffusers/models/normalization.py", line 509, in forward
[rank0]:     variance = hidden_states.to(torch.float32).pow(2).mean(-1, keepdim=True)
[rank0]: torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 38.00 MiB. GPU 0 has a total capacity of 95.07 GiB of which 25.56 MiB is free. Including non-PyTorch memory, this process has 95.04 GiB memory in use. Of the allocated memory 90.33 GiB is allocated by PyTorch, and 2.61 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
